name: Nix build

on:
  push:
  workflow_dispatch: # allows manual triggering

env:
  nix-conf: |-
    substituters = https://cache.garnix.io https://cache.nixos.org/ https://hyprland.cachix.org https://hyprland.cachix.org ssh://${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} https://nix-cache.heimat.dev https://nix-community.cachix.org
    trusted-public-keys = cache.garnix.io:CTFPyKSLcx5RMJKfLo5EEPUObbA78b0YQ2DTCJXqr9g= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hyprland.cachix.org-1:a7pgxzMz7+chwVL3/pzj6jIBMioiJM7ypFP8PwtkuGc= nix-cache.heimat.dev:k/zdgSv+6lcJ/9DRILjA7H18eIlFSA0OwzyqqXEwySM= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Generate build matrix
        id: set-matrix
        shell: bash
        run: |
          echo "matrix=$(./.github/workflows/scripts/nix-flake-show.sh)" \
            >> $GITHUB_OUTPUT

  build-pkgs-free:
    needs: setup-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pkg: ${{ fromJson(needs.setup-matrix.outputs.matrix).pkgs.free }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: ${{ env.nix-conf }}

      - uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Setup SSH Keys
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Setup known_hosts
        run: |-
          ssh-keyscan "${{ secrets.SSH_HOST }}" >> "${HOME}/.ssh/known_hosts"

      - name: Build package
        run: |-
          nix build --print-build-logs \
            '.#packages.x86_64-linux.${{ matrix.pkg }}'

  build-pkgs-nonfree:
    needs: setup-matrix
    runs-on: ubuntu-latest
    env:
      NIX_BUILDER: "ssh://${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}?ssh-key=/home/runner/.ssh/id_ed25519"
      NIXPKGS_ALLOW_UNFREE: 1
      SSH_PRIVATE_KEY_PATH: "/home/runner/.ssh/id_ed25519"
    strategy:
      fail-fast: false
      matrix:
        pkg: ${{ fromJson(needs.setup-matrix.outputs.matrix).pkgs.nonfree }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: ${{ env.nix-conf }}

      # NOTE You might want to disable magic-nix-cache-action since it will
      # technically redistribute our proprietary packages (by putting them in
      # the GitHub Actions cache). Luckily this should is not available outside
      # of GH Actions run from within this repo.
      - uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Setup SSH Keys
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Setup known_hosts
        run: |-
          ssh-keyscan "${{ secrets.SSH_HOST }}" >> "${HOME}/.ssh/known_hosts"

      - name: Fetch proprietary fonts (nixpkg src)
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 5
          max_attempts: 3
          shell: bash
          command: |-
            ./pkgs/fonts/src/fetch-fonts.sh \
              --remote-user "${{ secrets.SSH_USERNAME }}" \
              --remote-host "${{ secrets.SSH_HOST }}"

      - name: Trick flake by git adding all files (ignoring .gitignore)
        run: |-
          git add --intent-to-add --force .

      - name: Build package
        # NOTE --impure is required for consuming env vars (ie. NIXPKGS_ALLOW_UNFREE)
        run: |-
          nix build --print-build-logs --builders "$NIX_BUILDER" --impure \
            '.#packages.x86_64-linux.${{ matrix.pkg }}'
          tree result

  build-hosts:
    needs:
      - setup-matrix
      - build-pkgs-free
      - build-pkgs-nonfree
    if: ${{ always() && success('setup-matrix') }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        host: ${{ fromJson(needs.setup-matrix.outputs.matrix).hosts }}
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: ${{ env.nix-conf }}

      - uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Setup SSH Keys
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Setup known_hosts
        run: |-
          ssh-keyscan "${{ secrets.SSH_HOST }}" >> "${HOME}/.ssh/known_hosts"

      - name: Build nixosConfiguration
        run: |-
          nix build --print-build-logs \
            '.#nixosConfigurations.${{ matrix.host }}.config.system.build.toplevel'
